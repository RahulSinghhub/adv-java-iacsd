
package com.blogs.service;

import java.util.List;
import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.blogs.custom_exceptions.ResourceNotFoundException;
import com.blogs.entities.Category;
import com.blogs.repository.CategoryRepository;



@Service
@Transactional
public class CategoryServiceImpl implements CategoryService {
   @Autowired
   private CategoryRepository categoryRepository;
   
   @Override
   public List<Category> getAllCategories(){
	   return categoryRepository.findAll();
   }

@Override
public Category addNewCategory(Category newCategory) {
	// TODO Auto-generated method stub
	return categoryRepository.save(newCategory); 
	
}

@Override
public String deleteCategoryDetails(Long catId) {
	// TODO Auto-generated method stub
	if(categoryRepository.existsById(catId)) {
	categoryRepository.deleteById(catId);
	return "Category details deleted";
}
return "deleting category details";
}

@Override
public Category getCategoryDetails(Long catId) {
	// TODO Auto-generated method stub
	//optional method name is finfbyid long catid
	Optional<Category> optional=categoryRepository.findById(catId);
	return optional.orElseThrow(()->new ResourceNotFoundException("Invalid category id"));
}

@Override
public Category updateCategoryDetails(Category category) {
	// TODO Auto-generated method stub
	//save method of diff repo
	return categoryRepository.save(category);
}
   
}
